plugins {
    id "org.ajoberstar.grgit" version "5.0.0"
    id 'org.ajoberstar.git-publish' version '4.1.1'
}

subprojects {
    apply plugin: 'java'

    group 'io.github.lukebemish.brainfrick'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    jar {
        doFirst {
            manifest {
                attributes(
                        'Built-By': "Luke Bemish",
                        'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                        'Build-Revision': grgit.head().id,
                        'Created-By': "Gradle ${gradle.gradleVersion}",
                        'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                        'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
                )
            }
        }
    }
}

gitPublish {
    commitMessage = 'Update javadocs'
    branch = 'gh-pages'
    repoUri = "https://github.com/lukebemish/brainfrick.git"

    publications {
        runtime {
            commitMessage.set('Update javadocs - runtime')
            branch.set('gh-pages-staging')
            contents {copyspec->
                copyspec.from(project(":runtime").javadoc) {
                    into 'apidoc/runtime'
                    exclude 'stylesheet.css'
                }
            }
            preserve {copyspec->
                copyspec.include '**/*'
                copyspec.exclude {FileTreeElement file ->
                    file.relativePath.pathString.startsWith("apidoc/runtime/") &&
                            !(file.relativePath.pathString.startsWith('apidoc/runtime/stylesheet.css'))
                }
            }
        }

        plugin {
            commitMessage.set('Update javadocs - gradle plugin')
            branch.set('gh-pages-staging')
            contents {copyspec->
                copyspec.from(project(":plugin").javadoc) {
                    into 'apidoc/plugin'
                    exclude 'stylesheet.css'
                }
            }
            preserve {copyspec->
                copyspec.include '**/*'
                copyspec.exclude {FileTreeElement file ->
                    file.relativePath.pathString.startsWith("apidoc/plugin/") &&
                            !(file.relativePath.pathString.startsWith('apidoc/plugin/stylesheet.css'))
                }
            }
        }
    }
}

task prepJavadocs() {
    doLast {
        logger.warn "Remember to update pages!"
    }
}

gitPublishRuntimeCopy.dependsOn project(":runtime").javadoc
gitPublishPluginCopy.dependsOn project(":plugin").javadoc

prepJavadocs.dependsOn gitPublishRuntimeCommit
prepJavadocs.dependsOn gitPublishPluginCommit