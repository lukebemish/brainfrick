plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'org.ajoberstar.git-publish' version '4.1.1'
    id 'com.gradle.plugin-publish' version '1.0.0'
}

version '1.0.0'
archivesBaseName = "brainfrick-plugin"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.groovy:groovy:4.0.4'
    implementation 'org.ow2.asm:asm:9.3'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.antlr:antlr4:4.10.1'

    implementation project(":compiler")
}

tasks.withType(JavaCompile) {
    source(project(":compiler").sourceSets.main.allSource)
    source(project(":runtime").sourceSets.main.allSource)
}

sourcesJar {
    from(project(":compiler").sourceSets.main.allSource)
    from(project(":runtime").sourceSets.main.allSource)
}

pluginBundle {
    website = 'https://github.com/lukebemish/brainfrick'
    vcsUrl = 'https://github.com/lukebemish/brainfrick'
    tags = ['brainfrick']
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = 'io.github.lukebemish.brainfrick'
            displayName = "Brainfrick Plugin"
            description = "Plugin supporting compilation of brainfrick code and brainmaps"
            implementationClass = 'io.github.lukebemish.brainfrick.plugin.gradle.BrainfrickBasePlugin'
        }
    }
}

javadoc {
    title = "Brainfrick Gradle Plugin - v${version}"
}

gitPublish {
    repoUri = "https://github.com/lukebemish/brainfrick.git"

    branch = 'gh-pages'

    repoDir = file("$buildDir/gitPublish")
    contents {
        from(javadoc) {
            into 'apidoc/plugin'
            exclude 'stylesheet.css'
        }
    }
    preserve {
        include '**/*'
        exclude {FileTreeElement file ->
            file.relativePath.pathString.startsWith("apidoc/plugin/") &&
                    !(file.relativePath.pathString.startsWith('apidoc/plugin/stylesheet.css'))
        }
    }
    commitMessage = 'Updating javadocs - plugin'
}

task pushJavadoc() {
    doLast {
        logger.warn "Remember to update pages!"
    }
}

publish.dependsOn pushJavadoc
pushJavadoc.dependsOn gitPublishCommit



